<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.woniu.mapper.CommentMapper" >
  <resultMap id="BaseResultMap" type="com.woniu.entity.Comment" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="argue" property="argue" jdbcType="VARCHAR" />
    <result column="user_score" property="userScore" jdbcType="TINYINT" />
    <result column="mid" property="mid" jdbcType="INTEGER" />
    <result column="cid" property="cid" jdbcType="INTEGER" />
    <result column="time" property="time" jdbcType="DATE" />
    <result column="uid" property="uid" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, argue, user_score, mid, cid, time, uid
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.woniu.entity.CommentExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from comment
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from comment
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from comment
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.woniu.entity.CommentExample" >
    delete from comment
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.woniu.entity.Comment" >
    insert into comment (id, argue, user_score, 
      mid, cid, time, uid
      )
    values (#{id,jdbcType=INTEGER}, #{argue,jdbcType=VARCHAR}, #{userScore,jdbcType=TINYINT}, 
      #{mid,jdbcType=INTEGER}, #{cid,jdbcType=INTEGER}, #{time,jdbcType=DATE}, #{uid,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.woniu.entity.Comment" >
    insert into comment
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="argue != null" >
        argue,
      </if>
      <if test="userScore != null" >
        user_score,
      </if>
      <if test="mid != null" >
        mid,
      </if>
      <if test="cid != null" >
        cid,
      </if>
      <if test="time != null" >
        time,
      </if>
      <if test="uid != null" >
        uid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="argue != null" >
        #{argue,jdbcType=VARCHAR},
      </if>
      <if test="userScore != null" >
        #{userScore,jdbcType=TINYINT},
      </if>
      <if test="mid != null" >
        #{mid,jdbcType=INTEGER},
      </if>
      <if test="cid != null" >
        #{cid,jdbcType=INTEGER},
      </if>
      <if test="time != null" >
        #{time,jdbcType=DATE},
      </if>
      <if test="uid != null" >
        #{uid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.woniu.entity.CommentExample" resultType="java.lang.Integer" >
    select count(*) from comment
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update comment
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.argue != null" >
        argue = #{record.argue,jdbcType=VARCHAR},
      </if>
      <if test="record.userScore != null" >
        user_score = #{record.userScore,jdbcType=TINYINT},
      </if>
      <if test="record.mid != null" >
        mid = #{record.mid,jdbcType=INTEGER},
      </if>
      <if test="record.cid != null" >
        cid = #{record.cid,jdbcType=INTEGER},
      </if>
      <if test="record.time != null" >
        time = #{record.time,jdbcType=DATE},
      </if>
      <if test="record.uid != null" >
        uid = #{record.uid,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update comment
    set id = #{record.id,jdbcType=INTEGER},
      argue = #{record.argue,jdbcType=VARCHAR},
      user_score = #{record.userScore,jdbcType=TINYINT},
      mid = #{record.mid,jdbcType=INTEGER},
      cid = #{record.cid,jdbcType=INTEGER},
      time = #{record.time,jdbcType=DATE},
      uid = #{record.uid,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.woniu.entity.Comment" >
    update comment
    <set >
      <if test="argue != null" >
        argue = #{argue,jdbcType=VARCHAR},
      </if>
      <if test="userScore != null" >
        user_score = #{userScore,jdbcType=TINYINT},
      </if>
      <if test="mid != null" >
        mid = #{mid,jdbcType=INTEGER},
      </if>
      <if test="cid != null" >
        cid = #{cid,jdbcType=INTEGER},
      </if>
      <if test="time != null" >
        time = #{time,jdbcType=DATE},
      </if>
      <if test="uid != null" >
        uid = #{uid,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.woniu.entity.Comment" >
    update comment
    set argue = #{argue,jdbcType=VARCHAR},
      user_score = #{userScore,jdbcType=TINYINT},
      mid = #{mid,jdbcType=INTEGER},
      cid = #{cid,jdbcType=INTEGER},
      time = #{time,jdbcType=DATE},
      uid = #{uid,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <resultMap id="commentMap" type="com.woniu.entity.Comment">
    <id column="cid" property="id" jdbcType="INTEGER" />
    <result column="argue" property="argue" jdbcType="VARCHAR" />
    <result column="user_score" property="userScore" jdbcType="TINYINT" />
    <result column="time" property="time" jdbcType="DATE" />
    <association property="user" javaType="com.woniu.myutil.myeneity.User">
      <result column="username" property="username" jdbcType="VARCHAR" />
      <result column="state" property="state" jdbcType="TINYINT" />
      <result column="upic" property="upic" jdbcType="VARCHAR" />
    </association>
  </resultMap>
  <!--自定义方法-->
  <select id="getComments" parameterType="Integer" resultMap="commentMap">
    select c.id cid,argue,user_score,username,time,state,upic from comment c left join  user u on c.uid=u.id
    where   mid=#{mid,jdbcType=INTEGER} order by time desc limit #{pageIndex},#{num}
  </select>
</mapper>